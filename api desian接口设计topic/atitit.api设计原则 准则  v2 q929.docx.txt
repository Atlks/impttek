 atitit.api设计原则 准则  v2 q929

什么是好的API？
·        完备（Be Complete）
对确定重点支持的用户场景具有完备的功能支持。就是说，用户通过对一组API的调用能够完成预期的功能。
·        不冗余（Be Minimal）
在完备的前提下，API只提供最小的功能集合。不缺少、不冗余。
·        简单清晰（Be Simple & Clear）
接口设计简单清晰。每个接口都有自己明确的语义，并只专注于尽量单一的功能。产品概念简单、关系清楚。
·        易于学习（Be Easy to Learn & Use）
符合用户的直觉；接口设计有统一的范式，用户可以举一反三。极致是没有文档用户也知道怎样调用接口。
·        可扩展（Be Extensible）
设计具有扩展性，能够在一定程序上适应变化，API在发展中具有“后向兼容性”（backward-compatibility）。

4. 不可枚举，必须抽象
API是为了解决一个或一类问题，或提供一个或一类服务。对于同一类问题，不同的应用，不同的客户需求会有不同，问题的表现也可能不同。API不能因为这些不同，来枚举这些不同，一一解决，这是永远加不完的。必需看到问题的本质，抽象解决，统一解决。


参考
API通用设计原则 - 蜗牛架构师 - 博客频道 - CSDN.NET.html
API 的设计原则_乐伟梁_新浪博客.html


