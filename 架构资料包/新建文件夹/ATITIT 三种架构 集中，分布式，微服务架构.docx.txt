ATITIT 三种架构 集中，分布式，微服务架构


 
从图中可以看到，共有三种模式，第一种是集中式架构也是单块应用最常使用的架构模式。第二种是分布式架构，最常见的应用是将一个大的任务拆分到不同的机器中进行计算，最终有一台服务器合并计算结果就是分布式架构的一个好的体现。第三种就是微服务架构。


4、微服务和SOA的区别

微服务只是一种为经过良好架构设计的SOA解决方案，是面向服务的交付方案。


微服务更趋向于以自治的方式产生价值。


微服务与敏捷开发的思想高度结合在一起，服务的定义更加清晰，同时减少了企业ESB开发的复杂性。


微服务是soa思想的一种提炼！


SOA是重ESB，微服务是轻网关。




逐步上下文

划分方法：一开始识别粗粒度的限界上下文、这些粗粒度的上下文可能包括一些套嵌的限界上下文，这些套嵌的上下文不直接对外可见。


暴露原则：使用粗粒度上下文还是套嵌上下文暴露服务，哪个更合理，应该有组织结构来决定的。

架构的演进原则

正如上面二个图的示例所示，左边的订单处理，货物接收和库存管理三个模块在项目研发初期被归集到了仓库服务中，财务服务获取库存管理的数据，直接访问仓库服务的库存管理接口就可以了。随着这三个模块的不断演进和壮大，单个服务已经不能满足业务和团队发展的需求，这时候将这三个模块分别拆分演变成右边的结构图，这时候订单管理，货物接收和库存管理分别以服务的形式对应不同的团队，财务服务只需请求库存管理服务就可以得到相应的数据。
Lazy原则 尽可能推迟破坏性修改 
微服务的实现模型 异步与通知订阅设计模式



版本共存  最好共存两个版本
幂等原则 设计模式？？
幂等操作，多次执行所产生的影响，均与一次执行影响相同。可以把某些特定业务操作设计成幂等的，比如客户下单送积分。


