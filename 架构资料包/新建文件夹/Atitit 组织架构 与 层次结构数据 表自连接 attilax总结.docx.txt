Atitit 组织架构 与 层次结构数据 表自连接 attilax总结


	1.1. 表自连接	1
	1.2. 过滤最底层没有层次的组织	2
	1.3. 连接title与id方便select控件显示	2

自连接原理
 A 作为高层表
B 作为底层表
自连接的本意就是将一张表看成多张表来做连接

自连接使用场合   从这里我们看到，当表中的某一个字段与这个表中另外字段的相关时，我们可能用到自连接

表自连接



SELECT
	`d`.`title` AS `title`,
	`d`.`dptno` AS `dptno`,
	`dpt_lev2`.`title` AS `title_lev2`,
	`dpt_lev2`.`dptno` AS `dptno_lev2`,
	`dpt_lev3`.`title` AS `title_lev3`,
	`dpt_lev3`.`dptno` AS `dptno_lev3`,
	`dpt_lev4`.`title` AS `title_lev4`,
	`dpt_lev4`.`dptno` AS `dptno_lev4`,
	`dpt_lev5`.`title` AS `title_lev5`,
	`dpt_lev5`.`dptno` AS `dptno_lev5`,
	`dpt_lev6`.`title` AS `title_lev6`,
	`dpt_lev6`.`dptno` AS `dptno_lev6`,
	`dpt_lev7`.`title` AS `title_lev7`,
	`dpt_lev7`.`dptno` AS `dptno_lev7`
FROM
	(
		(
			(
				(
					(
						(
							`l_department` `d`
							LEFT JOIN `l_department` `dpt_lev2` ON (
								(
									`dpt_lev2`.`dptpid` = `d`.`dptno`
								)
							)
						)
						LEFT JOIN `l_department` `dpt_lev3` ON (
							(
								`dpt_lev3`.`dptpid` = `dpt_lev2`.`dptno`
							)
						)
					)
					LEFT JOIN `l_department` `dpt_lev4` ON (
						(
							`dpt_lev4`.`dptpid` = `dpt_lev3`.`dptno`
						)
					)
				)
				LEFT JOIN `l_department` `dpt_lev5` ON (
					(
						`dpt_lev5`.`dptpid` = `dpt_lev4`.`dptno`
					)
				)
			)
			LEFT JOIN `l_department` `dpt_lev6` ON (
				(
					`dpt_lev6`.`dptpid` = `dpt_lev5`.`dptno`
				)
			)
		)
		LEFT JOIN `l_department` `dpt_lev7` ON (
			(
				`dpt_lev7`.`dptpid` = `dpt_lev6`.`dptno`
			)
		)
	)

过滤最底层没有层次的组织
 where title_lev2 is not null

连接title与id方便select控件显示
SELECT
	concat_ws(
		'>',
		`dpt_lev`.`title`,
		`dpt_lev`.`title_lev2`,
		`dpt_lev`.`title_lev3`,
		`dpt_lev`.`title_lev4`,
		`dpt_lev`.`title_lev5`,
		`dpt_lev`.`title_lev6`
	) AS `title`,
	concat_ws(
		'>',
		`dpt_lev`.`dptno`,
		`dpt_lev`.`dptno_lev2`,
		`dpt_lev`.`dptno_lev3`,
		`dpt_lev`.`dptno_lev4`,
		`dpt_lev`.`dptno_lev5`,
		`dpt_lev`.`dptno_lev6`
	) AS `dptno`
FROM
	`dpt_lev_fltEmpty` `dpt_lev`






