atitit.attilax LRT 语言运行时类库的架构


CLR内部结构
 

 
从 上图可以看到CLR提供的功能，如类型安全(Type Checker)、垃圾回收（Garbage Collector）、异常处理(Exception Manager)、向下兼容(COM Marshaler)等，具体的说，.NET上的CLR为开发者提供如下的服务：
平台无关：CLR 实际上是提供了一项使用了虚拟机技术的产品，他在操作系统之上，并不要求程序的运行平台是 Windows系统，只要是能够支持它的运行库的系统，都可以在上面运行.NET应用。所以，一个完全由托管代码组成的应用程序，只要编译一次，就可以在 任何支持.NET的平台上运行.（从Mono的出现变得更加真实啦,不用再羡慕JAVA啦） 
跨语言集成：CLR语序开发这以任何语言进行开发，用这些语言开发的代码，可以在CLR环境下紧密无缝的进行交叉调用，例如，可以用VB声明一个基类对象，然后在C#代码中直接创建次基类的派生类。 
自动内存管理：CLR提供了拉架收集机制，可以自动管理内存。当对象或变量的生命周期结速后，CLR会自动释放他们所占用的内存. 
跨语言异常处理 
版本控制（避免了DLL灾难） 
.NET安全 
简单的组件互操作性。 
自描述组件：自描述组件是指将所有数据和代码都放在一个文件中的执行文件。自描述组件可以大大简化系统的开发和配置，并且改进系统的可靠性。 

参考
CLR 这些年有啥变化吗？ - 霍旭东 - 博客园.htm

