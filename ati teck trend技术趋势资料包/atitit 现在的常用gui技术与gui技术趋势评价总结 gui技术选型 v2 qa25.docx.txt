Atitit.现在的常用gui技术与gui技术趋势评价总结

	1. Gui俩种分类：  native 和 dsl 和 script	1
	2. 推荐--最好的跨平台gui解决方案h5	1
	2.1. 几大技术体系（java .net php android ios)都能接受的gui技术 唯一就是h5了。。	2
	2.2. 如何评价gui各个解决方案？？指标判断	2
	3. 公司选择与个人选择的矛盾	2
	4. 其他常见的gui方案	3
	4.1. Swing,swt （java native	3
	4.2. Winform（ net ms native）	3
	4.3. Wpf （ms的h5）	3
	4.4. Android  ios的native ui技术	3
	4.5. Qt gtk （c++ c native gui）	3
	5. Native vs h5到底是不是未来？？个人应该如何选择？？	3
	6. 各种gui适用的场合	4
	7. 参考资料	4
	7.1.1. Atiti.ui原理与gui理论 - attilax的专栏 - 博客频道 - CSDN.NET	4

Gui俩种分类：  native 和 dsl 和 script
Native的gui就是界面代码属于编译型语言写的，需要修改代码就要重新编译打包，比较麻烦，唯一优点就是性能。。
Dsl的gui语言典型的就是html语言标记语言。说明what而不是说明how。。
脚本script gui语言，script 鉴于 native 和dsl直接，属于中间派。
他们各有优点

但从未来趋势看与可读性可维护性可扩展考虑，优先的选择顺序gui技术为： html5>> script >>native
推荐--最好的跨平台gui解决方案h5
HTML5的跨平台优势在移动互联网时代被进一步凸显。HTML5是唯一一个通吃PC、Mac、iPhone、iPad、Android、Windows Phone等主流平台的跨平台语言。Java和Flash都曾梦想这个位置，但梦断于iOS。此时人们纷纷开始研究基于HTML5开发跨平台手机应用。很多人当时认为，原生应用只是过渡，就像当年从C/S结构转变为B/S结构一样。

几大技术体系（java .net php android ios)都能接受的gui技术 唯一就是h5了。。


如何评价gui各个解决方案？？指标判断

应该从以下指标判断

**是否跨平台？  当然是跨平台的好了
**属于dsl还是native体系？？Dsl加分，native减分。
**属于open体系还是封闭体系？ Open加分。。。比如java和net，应该优先选择java这类open体系技术

**支持公司历史如何？？   
比如ms这类黑历史的公司，当年的技术vb pb vc几乎直接就淘汰了，以广大用户为小白鼠，遇到此类公司的技术要慎重选择。

**支持公司是否有自己的价值观？？
比如adobe这类打酱油的软件技术公司，没有自己价值观，所以它的flash技术就没落了。而曾经的sun公司，就是一个有价值观的公司，所以虽然他自己被收购了，但是技术广为流传。。

**支持公司实力如何，小公司的gui方案不要选，除非以及广为人知，类似open体系了。。Delphi的遭遇。。
**是否生态区与技术工具齐全，资料好找？？

公司选择与个人选择的矛盾
在国内环境下，特别是小公司，小企业，自身寿命并不长久，也就不关注技术方案，只要快了就好，所以很喜欢ms体系的一系列技术，曾经的vb pb delphi的很多。

不过大公司一般喜欢open开发的技术体系

个人如何选择？？个人的职业生涯几十年，远远常于部分技术周期。。应该优先选择有着长远发展的技术。。
当然，如果打算干几年就转行或者无所谓，也可以选择自己喜欢的技术即可，青菜萝卜各有所爱嘛，或者环境所迫，小公司就是喜欢短周期技术，也只能被迫使用了。。
鱼和熊掌不可兼得。。
技术没有好坏，只有适合不适合，只要与自己规划的适合，就是合适的技术。。

其他常见的gui方案
Swing,swt （java native
Swing,swt属于native gui，html出现以前，最为跨平台gui的技术。但是只适用于java体系

Winform（ net ms native）
Ms的native gui技术。Net体系技术。。个人不看好此技术，第一，native体系趋势不妙
第二，net体系趋势不妙， 第三  ms的黑历史， ms喜欢淘汰自己发明的东东，让广大用户当小白鼠，vp pb vc的惨淡下场，预知未来就的回首历史，从ms公司的历史角度看，winform要淘汰了。。

Wpf （ms的h5）
就是ms的私有h5技术。。最重要的是不是open的。。虽然属于dsl体系，加分项。。单也属于net体系和ms体系，减分项。。个人不看好。但是未来大概率趋势的要淘汰这类私有技术，当然有人喜欢也无所谓。。反正很多小企业自己也就几年寿命，要求不高。。

Android  ios的native ui技术
Qt gtk （c++ c native gui）
Native vs h5到底是不是未来？？个人应该如何选择？？
很多人当时认为，原生应用只是过渡，就像当年从C/S结构转变为B/S结构一样。
Native当然依然会存在，就像在java时代，c++依然存在一样，汽车时代，马车依然存在，但是市场份额就大大的较少了..

福祸相依，好处也有，虽然职位提供少了，但是每个职位的含金量提高了。。比如，现在时代，养马就成了贵族活动，比起以前的养马职业，现代的当然赚钱了。。

对于广大的普通民众来说，还是要顺应趋势，以市场流行技术最好。。
对于少数人来说，相对的衣食不愁，按着兴趣搞搞native方案，也是不错的选择。

根据自己的实际情况来选择不同的技术道路。。一个人一个哈姆雷特。。

各种gui适用的场合
绝大部分系统，h5就比较合适。。
少数游戏等少数重度依赖gui性能的，native比较合适。。不过目前很多游戏随着硬件系列的发展，也开始像script化，h5化发展了。
 至于图形 视频处理什么的虽然后端处理依赖极高性能，但是gui方面并不那么依赖性能，可以在gui使用h5，后端使用高性能方案即可

作者:: 绰号:老哇的爪子 （ 全名：：Attilax Akbar Al Rapanui 阿提拉克斯 阿克巴 阿尔 拉帕努伊 ） 
汉字名：艾提拉（艾龙），   EMAIL:1466519819@qq.com
转载请注明来源： http://blog.csdn.net/attilax

参考资料
HTML5定稿了，为什么原生App世界将被颠覆 - Gabriel的专栏 - 博客频道 - CSDN.NET.html
 atitit.跨平台gui 概览 - attilax的专栏 - 博客频道 - CSDN.NET.html
Atiti.ui原理与gui理论 - attilax的专栏 - 博客频道 - CSDN.NET
paip.调用GUI接口. - attilax的专栏 - 博客频道 - CSDN.NET.html

atiend

