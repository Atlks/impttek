Atitit. 语法分析 and 语义分析

词法分析是将源代码的字符流转变为Token集合，而语法分析则是根据Token序列抽象构造语法树（AST）的过程，AST是一种用来描述程序代码语法结构的树形表示形式，语法树的每个节点都代表着程序代码中的一个语法结构，例如包、类型、修饰符、运算符、接口、返回值甚至代码注释都可以是一个语法结构。


语义分析
经过上两步之后，我们获得了程序代码的抽象语法树表示，语法树能表示一个正确的源代码抽象，但无法保证源程序是符合逻辑的，这时候语义分析登场了，它的主要任务就是对结构上正确的源程序进行上下文有关性质的审查。标注检查、数据及控制流分析、解语法糖是语义分析阶段的几个步骤，在这具体说下语法糖的概念。语法糖是指在计算机语言中添加的某种语法，这种语法对语言的功能并没有影响，但更方便程序猿使用。Java中最常用的语法糖主要是泛型、变长参数、自从装箱/拆箱、遍历循环，JVM在运行时不支持这些语法，它们在编译阶段还原回简单的基础语法结构，这个过程也就是解语法糖。举个泛型擦除的例子，List<Integer>和List<String>在编译之后会进行泛型擦除，变成一样的原生类型List<E>。

 

